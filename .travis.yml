dist: trusty
sudo: required
language: java
jdk:
  - openjdk8
  - oraclejdk8
# env:
#     - MONGODB_VER=mongodb-linux-x86_64-2.6.12 ANT_TEST=test               WIRED_TIGER=false
#     - MONGODB_VER=mongodb-linux-x86_64-3.0.14 ANT_TEST=test_mongo_storage WIRED_TIGER=false
#     - MONGODB_VER=mongodb-linux-x86_64-3.0.14 ANT_TEST=test_mongo_storage WIRED_TIGER=true
#     - MONGODB_VER=mongodb-linux-x86_64-3.2.12 ANT_TEST=test_mongo_storage WIRED_TIGER=false
#     - MONGODB_VER=mongodb-linux-x86_64-3.2.12 ANT_TEST=test_mongo_storage WIRED_TIGER=true
#     - MONGODB_VER=mongodb-linux-x86_64-3.4.2  ANT_TEST=test_mongo_storage WIRED_TIGER=false
#     - MONGODB_VER=mongodb-linux-x86_64-3.4.2  ANT_TEST=test_mongo_storage WIRED_TIGER=true

before_install:
  - sudo apt-get -qq update
  - sudo apt-get install -y ant-optional

install:
  - export CURDIR=$PWD
  - cd ..
  - git clone https://github.com/kbase/jars
  - export JARSDIR=`pwd`/jars/lib/jars/

  - export LAST_VER=last-956
  - wget -O $LAST_VER.zip https://www.dropbox.com/s/mj528m2ylp0nty5/$LAST_VER.zip?dl=1
  - unzip $LAST_VER.zip
  - cd $LAST_VER
  - make
  - export PATH=$PATH:$PWD/src
  - cd $CURDIR

script:
#  - cd ..
#  - wget http://fastdl.mongodb.org/linux/$MONGODB_VER.tgz
#  - tar xfz $MONGODB_VER.tgz
#  - export MONGOD=`pwd`/$MONGODB_VER/bin/mongod
#  - cd -
#  - cp -n test.cfg.example test.cfg
#  - sed -i "s#^test.temp.dir=.*#test.temp.dir=temp_test_dir#" test.cfg
#  - sed -i "s#^test.mongo.exe.*#test.mongo.exe=$MONGOD#" test.cfg
#  - sed -i "s#^test.mongo.wired_tiger.*#test.mongo.wired_tiger=$WIRED_TIGER#" test.cfg
#  - sed -i "s#^test.jars.dir=.*#test.jars.dir=$JARSDIR#" test.cfg
#  - cat test.cfg
  - ant test

jobs:
  include:
    - stage: deploy
      env: # The following are secure declarations for DOCKER_USER, DOCKER_PASS
        - secure: "gnoyDmBnGaf9hd0yplL8FxCkeZ74K5hCyStCXskGMXUX5lf0fO613IbTrglcYyD6Tc/i7LQYLWK6h1a+5TKw1PJADtwFCmchdyPew7AcOYAYm8MA33Z9dYKA6euUl6Hw+cQ26GOTCmP/9GpU0A4pbvLUuwBtpBkuXqK7QEW9xfSL6+FkTiqMvrmxVVBopGPY0GuUTGZ8TquU8Ih/iG9USH5qe3nhvmLwcrYx/7woLp2MLLQBjrrRWszDvlDXnCzzEOsiTMDBNhB2OCn1grwn6hINs2uvggahFI6ss7lkzeAh2IXqQo0SGSrc06peF3HwVOoThUi/DnYh7BApD2NN2f61K2mQcbiZwClUHDE5s1Pzw7DmpbUD90ZjnSuOXVInuWnROcnwEPZhW6greQkBZyPD/gjZSB4CrE6lsP4JYvMTe2ggiFYBXQF3eJ0Jni4DIeznzCnbF4teWkD3w4BVOda4as5ZJINaITjXYpDKwNsCwNUW3LiStqP/TfQpueIe4EtkzzI7dF26UYGApL5GUF7MjIeC2ch6qY2PzkNmurosgDMbtc1T1yZRe70JYPM/miy9EiW9dulpaEhL/yvxrVMQVoD9xRu3EkGhUxmMypsg/gkORfKepIE06Nyz9n9SEqEdAKjbUERSecPKxMZjVaPRgdGaR1n0jUsmRWobTB4="
        - secure: "S8SrZGPwYWf3gctu38qj4nBYO28qkgJblkWoANMxkiLdCCOc9Ulj1Ge54gDxc78g2xhzXiVHdMPbVvRG3ZusbkFJBFaXhu47p5GhKea4m/5KVovh2yLy/lt368tcNRUL8NeC4iZ/mDIX/hz0f1vd7v4Ss9NWhJwz4tBEzB7BrT2JzNEvTjM18p+JXmjVL8t7/a0NeTE5ey2uWsTeIFFrJT1fJ7X8IdmgDVO43k9+0TbmIU/TsG7gf5VkYg0Ehe+34kicOyIXijUBAU1OuDbP8uBU7MFrwLeSIpYua52m+OFVqEQ0Nm4AWaM1np6zfX1HM+1DYtIHBQgEo2Qxfjf3nctxmRlv8SGejRBh1ZqdAX1ukTU1CvRZu8qafH25T5xmX6AolSd6QFg+QUqPfuaiYN2RBHZNh7lT72J7cVfugfJ0peJi6UpaLMX8e+kNqZXivig9LGk3TcbqfkVaY32xApCqoSyV+2gzbeWr0s+HWdoSHI6T6ThF1zMCpU9QalIsWpOAaS1U8UajyTalpXXUJ5AIg3zd2DhWbH+ofrWAwJ2lDaYOjlxywr2Q74iQOYYmiqcfsaGUBsCiGcboxBj2SsIIOkazSt2W/dgWIzltyklm13++QN5jwXlZE0IUaIExVZqnznvnR6wQaNGdfYEF3BGVJAxUNBJjeU2cb8w7XM4="
      script: # Only push to dockerhub if this isn't a PR and we're updating master or develop
        - docker pull kbase/kb_jre
        - ant docker_image
        - IMAGE_NAME=kbase/gene_homology build/push2dockerhub.sh
after_success:
  - ls test-reports
  - bash <(curl -s https://codecov.io/bash) -f test-reports/coverage-report.xml
