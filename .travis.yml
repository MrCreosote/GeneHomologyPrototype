dist: trusty
sudo: required
language: java
jdk:
  - openjdk8
  - oraclejdk8
# env:
#     - MONGODB_VER=mongodb-linux-x86_64-2.6.12 ANT_TEST=test               WIRED_TIGER=false
#     - MONGODB_VER=mongodb-linux-x86_64-3.0.14 ANT_TEST=test_mongo_storage WIRED_TIGER=false
#     - MONGODB_VER=mongodb-linux-x86_64-3.0.14 ANT_TEST=test_mongo_storage WIRED_TIGER=true
#     - MONGODB_VER=mongodb-linux-x86_64-3.2.12 ANT_TEST=test_mongo_storage WIRED_TIGER=false
#     - MONGODB_VER=mongodb-linux-x86_64-3.2.12 ANT_TEST=test_mongo_storage WIRED_TIGER=true
#     - MONGODB_VER=mongodb-linux-x86_64-3.4.2  ANT_TEST=test_mongo_storage WIRED_TIGER=false
#     - MONGODB_VER=mongodb-linux-x86_64-3.4.2  ANT_TEST=test_mongo_storage WIRED_TIGER=true

before_install:
  - sudo apt-get -qq update
  - sudo apt-get install -y ant-optional

install:
  - export CURDIR=$PWD
  - cd ..
  - git clone https://github.com/kbase/jars
  - export JARSDIR=`pwd`/jars/lib/jars/

  - export LAST_VER=last-956
  - wget -O $LAST_VER.zip https://www.dropbox.com/s/mj528m2ylp0nty5/$LAST_VER.zip?dl=1
  - unzip $LAST_VER.zip
  - cd $LAST_VER
  - make
  - export PATH=$PATH:$PWD/src
  - cd $CURDIR

script:
#  - cd ..
#  - wget http://fastdl.mongodb.org/linux/$MONGODB_VER.tgz
#  - tar xfz $MONGODB_VER.tgz
#  - export MONGOD=`pwd`/$MONGODB_VER/bin/mongod
#  - cd -
#  - cp -n test.cfg.example test.cfg
#  - sed -i "s#^test.temp.dir=.*#test.temp.dir=temp_test_dir#" test.cfg
#  - sed -i "s#^test.mongo.exe.*#test.mongo.exe=$MONGOD#" test.cfg
#  - sed -i "s#^test.mongo.wired_tiger.*#test.mongo.wired_tiger=$WIRED_TIGER#" test.cfg
#  - sed -i "s#^test.jars.dir=.*#test.jars.dir=$JARSDIR#" test.cfg
#  - cat test.cfg
  - ant test

jobs:
  include:
    - stage: deploy
      env: # The following are secure declarations for DOCKER_USER, DOCKER_PASS
        - secure: "Nz6WM3hyw5/MhEm+mN23Y6+YIr74nO1Yy/WUXAPA5TcOAuAwKvAEIiKrONf2rlv8urrkcJEmiw8rJSLzIw5t1vISx7A4c+e68b7dN8SMzxfC5AaQMMKYKVRI3owfXzhvHqaREnmoxkJpbBl7KZ8a5jhIpDpLrxg5nvZkgK3zJ74GVr/7hj4aKLzyEtpnqQXmT2qs+Pzu9RxcnMSA/zCh0UUIyYMob0z3vrJ/lMDhJnaARDgjjTA4PzU4xQ2KpooBPi+mk8gRltyfxzJkvCt+RS5L6TQ7MGZwaDAt71jBlAzvABmzgxz3C0N7RlG/LtwVHA8JpV4Aqoox65tzQ3WDekVCK0NebCZPdxPuVDnZujUkUDr9iVuRHFgV5izJMcKLImsiJ6X1X5uZNrvFCA0zvPyvdqlRolw90cejSRmxuatw9auPgVmOBB/dwPVgRJ2RKJwLYLg0a47F5iXkf5gaeSNJ61XbwTqe+RlRoGgXsKar7dyPwAPaS9/RvnG7WuJ0zdvbbbYuU09rxIKWX6ThTtw9vDM5N8ho0paeveo9XNxhP+B5ZiK+9863CqEy5f/vedW/1Uqb5JFtVMKonXjIYJk3TKACRQ0ZJStzDxy7JTl7+XkrDAkgKGrocGOFiimdTGnT9DUV47Ax2fjCNge+jfq+CSxw9dy93caV3xgGfVo="
        - secure: "GTvBFjxFcvIWMuP4uNAcswKpHbdKOC9/hC3wxxTRDu4tcCHrn/T9+l6H+k2ODp+muffZeOpBUoJkBRuI7UmLf4fWW8cKW9neYnCCTCBtV9o90f5W2tctymmhB8iVId7hez+6dzjIjAe8B9YFBuBq7jDV15j66CE1eD+zAFSapjCcZu343dJdpVgNdcHzFAVK+D6USUGFO7LIFWMHArK0YueoaHwXiLQzjXPZ5A5EV6oTVsgnrfCYAHFrR6/UJrqX4+pBQ9hDMiNTqZ3wtNSD6S7cEQ21uKrjy3BHHIgLawC3NvIA+IPB18n85Zie1aOc1E9xv1bOGiMfvsBynyrYVHBwdVxmA6lB7Ljm2IkR//+8H7hgNDhNhOQPMrKnNc0OBviOV6g/UA7YebXYMW3SRKhaS75GeSaY2lSor/qCuSWTzsWjOBJ4+v7iO/xzmJO+2lga6fDv8hDdrx7IEVT1r8OvqF7fK+tUqx6E5eF/34rbPgKoN7nzEiUrr/km5UPHyP6Fti+MeFPK+9fIqrzLYkzX9Ep4iUqyUcO2QBuhq+fn2MWvY50VmW7uA/oFKe550If9JMW/MRZxET/Yxjrp8TKH//TK4j4NJY35KgaYVep8LcnLohPbHKi4C8TAH8ItvvC+eoqvPvDSQq2zst8oI2+IeiwOkpKUSOxRfv1EmRU="
      script: # Only push to dockerhub if this isn't a PR and we're updating master or develop
        - docker pull kbase/kb_jre
        - ant docker_image
        - IMAGE_NAME=kbase/gene_homology build/push2dockerhub.sh
after_success:
  - ls test-reports
  - bash <(curl -s https://codecov.io/bash) -f test-reports/coverage-report.xml
